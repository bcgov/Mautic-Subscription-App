metadata:
  name: mautic-subscribe-cleanup
  namespace: de0974-tools
spec:
  templates:
    - name: main
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: clone
            template: clone
            arguments: {}
        - - name: get-keycloak-sa-secret
            template: get-keycloak-sa-secret
            arguments: {}
        - - name: delete-keycloak-client
            template: delete-keycloak-client
            arguments: {}

    - name: clone
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/alpine/git:v2.26.2'
        args:
          - clone
          - '--depth'
          - '1'
          - '--branch'
          - '{{workflow.parameters.BRANCH}}'
          - '--single-branch'
          - '{{workflow.parameters.REPO}}'
        workingDir: /mnt/vol
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

    - name: get-keycloak-sa-secret
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/openshift/origin-cli:latest'
        command:
          - sh
          - '-c'
        args:
          - >-
            oc delete all,configmap,pvc,secret,service -l name={{workflow.parameters.APP_NAME}}-{{workflow.parameters.IMAGE_TAG}} -n {{workflow.parameters.TARGET_NAMESPACE}};
            oc get secret mautic-sso-service-account -o jsonpath={'.data.SSO_SA_CLIENT_ID'} -n de0974-tools > SSO_SA_CLIENT_ID.txt;
            oc get secret mautic-sso-service-account -o jsonpath={'.data.SSO_SA_PASSWORD'} -n de0974-tools > SSO_SA_PASSWORD.txt

        workingDir: /mnt/vol/Mautic-Subscription-App
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

    - name: delete-keycloak-client
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/giantswarm/tiny-tools'
        command:
          - sh
          - '-c'
        args:
          - >-
            cat SSO_SA_CLIENT_ID.txt | base64 --decode > SSO_SA_CLIENT_ID_DECODED.txt;
            cat SSO_SA_PASSWORD.txt | base64 --decode > SSO_SA_PASSWORD_DECODED.txt;
            NAME={{workflow.parameters.APP_NAME}} KC_URL={{workflow.parameters.KC_URL}} KC_CLIENT_ID=`cat SSO_SA_CLIENT_ID_DECODED.txt` 
            KC_CLIENT_SECRET=`cat SSO_SA_PASSWORD_DECODED.txt` REALM_NAME={{workflow.parameters.REALM_NAME}} TARGET_NAMESPACE={{workflow.parameters.TARGET_NAMESPACE}}
            PR={{workflow.parameters.IMAGE_TAG}}
            ./keycloak-client-creation/kc-delete-client.sh
        workingDir: /mnt/vol/Mautic-Subscription-App
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

  entrypoint: main
  arguments: {}
  serviceAccountName: workflow-creator
  volumeClaimTemplates:
    - metadata:
        name: work
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128Mi
        storageClassName: netapp-file-standard
      status: {}
  imagePullSecrets:
    - name: dockerhub-secret-mautic